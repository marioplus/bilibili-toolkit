name: release-greasy-fork.yml
on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  release-greasy-fork:
    runs-on: ubuntu-latest
    steps:
      - name: 检出
        uses: actions/checkout@v4

      - name: 下载release物料
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LATEST_VERSION=$(gh release list --exclude-drafts --exclude-pre-releases --limit 1 --json name --jq ".[].name")
          echo "最后发布版本: $LATEST_VERSION"
          
          # 下载物料
          gh release download $LATEST_VERSION

      - name: 提取脚本内容
        id: extract-script
        run: |
          SCRIPT_FILE=$(find . -name "*.user.js" | head -n 1)
          echo "脚本文件: $SCRIPT_FILE"
          echo "脚本内容:"
          cat $SCRIPT_FILE
          {
            echo "SCRIPT_CONTENT<<EOF"
            cat $SCRIPT_FILE
            echo "EOF"
          } >>$GITHUB_OUTPUT

      - name: 获取release描述
        id: get-release-description
        run: |
          DESCRIPTION=$(gh release view $GITHUB_REF --json body | jq -r .body)
          echo "release描述:"
          echo "$DESCRIPTION"
          {
            echo "DESCRIPTION<<EOF"
            echo "$DESCRIPTION"
            echo EOF
          } >>$GITHUB_OUTPUT

      - name: 更新 greasy-fork
        env:
          GF_API_KEY: ${{ secrets.GF_API_KEY }}
          GF_SCRIPT_ID: ${{ vars.GF_SCRIPT_ID }}
        run: |
          RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer $GF_API_KEY" \
            -F "script[code]=${{ steps.extract-script.outputs.SCRIPT_CONTENT }}" \
            -F "script[additional_info]=${{ steps.get-release-description.outputs.DESCRIPTION }}" \
            "https://greasyfork.org/scripts/$GF_SCRIPT_ID/versions.json")
          
          echo "更新greasy-fork结果:"
          echo "$RESPONSE"
