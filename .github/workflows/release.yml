name: Optimized Deploy to GitHub Releases
on:
  push:
    branches: [master]

jobs:
  extract-metadata:
    name: Extract Version and Changelog
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
      changelog: ${{ steps.extract.outputs.changelog }}
      artifact: ${{ steps.extract.outputs.artifact }}
    steps:
      - uses: actions/checkout@v4

      - name: Extract Metadata
        id: extract
        run: |
          # 校验文件存在
          if [ ! -f CHANGELOG.md ]; then
            echo "::error::CHANGELOG.md not found"
            exit 1
          fi

          # 提取并校验版本号
          VERSION=$(awk '/^## v[0-9]/{match($0, /## v([0-9.]+)/, arr); print arr[1]; exit}' CHANGELOG.md)
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::error::Invalid version format (expected X.Y.Z)"
            exit 1
          fi

          # 提取变更日志
          CHANGELOG=$(sed -n '/^## v[0-9]/,$p' CHANGELOG.md | sed '/^## v[0-9]/,$d')

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "artifact=$(basename "${{ github.repository }}").user.js-$VERSION" >> $GITHUB_OUTPUT

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: extract-metadata
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci
      - run: npm run build

      - name: Verify Artifacts
        run: test -d dist && test -n "$(ls -A dist)" || (echo "::error::No build artifacts" && exit 1)

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.extract-metadata.outputs.artifact }}
          path: dist/*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [extract-metadata, build]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.extract-metadata.outputs.artifact }}

      - name: Check Existing Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if gh release view v${{ needs.extract-metadata.outputs.version }} &>/dev/null; then
            echo "::error::Release v${{ needs.extract-metadata.outputs.version }} already exists"
            exit 1
          fi

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ needs.extract-metadata.outputs.version }} \
            --target ${{ github.sha }} \
            --title "v${{ needs.extract-metadata.outputs.version }}" \
            --notes "${{ needs.extract-metadata.outputs.changelog }}" \
            dist/*
